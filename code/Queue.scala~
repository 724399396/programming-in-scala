class Queue[T] (
    private val leading: List[T],
    private val trailing: List[T]
) {
    private def mirror = 
        if (leading.isEmpty)
            new Queue(trailing.reverse, Nil)
        else
            this
    def head = mirro.leading.head

    def tail = {
        val q = mirror
        new Queue(q.leding.tail, q.trailing)
    }

    def append(x: T) = 
        new Queue(leading, x :: trailing)
}
